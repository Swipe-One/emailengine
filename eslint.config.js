const js = require('@eslint/js');

module.exports = [
    {
        ignores: ['node_modules/**', 'ee-dist/**', 'static/**']
    },
    js.configs.recommended,
    {
        languageOptions: {
            ecmaVersion: 2020,
            sourceType: 'commonjs',
            globals: {
                // Node.js globals
                Buffer: 'readonly',
                __dirname: 'readonly',
                __filename: 'readonly',
                console: 'readonly',
                exports: 'writable',
                global: 'readonly',
                module: 'writable',
                process: 'readonly',
                require: 'readonly',
                BigInt: 'readonly',
                setImmediate: 'readonly',
                clearImmediate: 'readonly',
                setTimeout: 'readonly',
                clearTimeout: 'readonly',
                setInterval: 'readonly',
                clearInterval: 'readonly',
                URL: 'readonly',
                URLSearchParams: 'readonly',
                structuredClone: 'readonly',
                // Test globals
                it: 'readonly',
                describe: 'readonly',
                before: 'readonly',
                after: 'readonly',
                beforeEach: 'readonly',
                afterEach: 'readonly'
            }
        },
        files: ['**/*.js'],
        rules: {
            // Disable rules that conflict with the project's style
            'no-unused-vars': ['error', { args: 'none', caughtErrors: 'none' }],
            'no-prototype-builtins': 'off',
            // Disable all formatting rules (handled by Prettier)
            'array-bracket-spacing': 'off',
            'arrow-parens': 'off',
            'arrow-spacing': 'off',
            'block-spacing': 'off',
            'brace-style': 'off',
            'comma-dangle': 'off',
            'comma-spacing': 'off',
            'comma-style': 'off',
            'computed-property-spacing': 'off',
            'dot-location': 'off',
            'eol-last': 'off',
            'func-call-spacing': 'off',
            'function-call-argument-newline': 'off',
            'function-paren-newline': 'off',
            'generator-star-spacing': 'off',
            'implicit-arrow-linebreak': 'off',
            indent: 'off',
            'jsx-quotes': 'off',
            'key-spacing': 'off',
            'keyword-spacing': 'off',
            'linebreak-style': 'off',
            'lines-around-comment': 'off',
            'lines-between-class-members': 'off',
            'max-len': 'off',
            'multiline-ternary': 'off',
            'new-parens': 'off',
            'newline-per-chained-call': 'off',
            'no-extra-parens': 'off',
            'no-mixed-spaces-and-tabs': 'off',
            'no-multi-spaces': 'off',
            'no-multiple-empty-lines': 'off',
            'no-tabs': 'off',
            'no-trailing-spaces': 'off',
            'no-whitespace-before-property': 'off',
            'nonblock-statement-body-position': 'off',
            'object-curly-newline': 'off',
            'object-curly-spacing': 'off',
            'object-property-newline': 'off',
            'one-var-declaration-per-line': 'off',
            'operator-linebreak': 'off',
            'padded-blocks': 'off',
            'padding-line-between-statements': 'off',
            'quote-props': 'off',
            quotes: 'off',
            'rest-spread-spacing': 'off',
            semi: 'off',
            'semi-spacing': 'off',
            'semi-style': 'off',
            'space-before-blocks': 'off',
            'space-before-function-paren': 'off',
            'space-in-parens': 'off',
            'space-infix-ops': 'off',
            'space-unary-ops': 'off',
            'switch-colon-spacing': 'off',
            'template-curly-spacing': 'off',
            'template-tag-spacing': 'off',
            'unicode-bom': 'off',
            'wrap-iife': 'off',
            'wrap-regex': 'off',
            'yield-star-spacing': 'off'
        }
    }
];
